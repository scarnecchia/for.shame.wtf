import { decode, parse } from '@atcute/cid';
import { toBase32 } from '@atcute/multibase';
export class CIDLinkWrapper {
    $bytes;
    constructor($bytes) {
        this.$bytes = $bytes;
    }
    get $cid() {
        return decode(this.$bytes);
    }
    get $link() {
        return 'b' + toBase32(this.$bytes);
    }
    toJSON() {
        return { $link: this.$link };
    }
}
export const toCIDLink = (value) => {
    if (value instanceof Uint8Array) {
        return new CIDLinkWrapper(value);
    }
    return new CIDLinkWrapper(value.bytes);
};
export const fromCIDLink = (link) => {
    if (link instanceof CIDLinkWrapper) {
        return link.$cid;
    }
    return parse(link.$link);
};
//# sourceMappingURL=cid-link.js.map